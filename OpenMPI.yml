---
#
# Copyright 2016 James Benson
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#
- hosts: testgroup
  user: ubuntu
  become: yes
  vars:
    TEMP_LOCATION: /tmp/openmpi
    FINAL_LOCATION: /opt/openmpi-1.10.2
    DEBUG_LOCATION: /tmp/openMPI-examples
    ansible_ssh_user: vagrant
    ansible_ssh_pass: vagrant
    mpi_tutorial_zip: 'https://github.com/mpitutorial/mpitutorial.git'
    mpi_tutorial_repo_dest: "{{ DEBUG_LOCATION }}/mpitutorial-master"
  name: OpenMPI Deployment beginning ...
  tasks:
     
  - name: Update ubuntu ...
    apt: update_cache=yes
    tags:
      - easy
      - latest

  - name: Install required packages ...
    apt: name={{ item }} state=present
    with_items:
     - build-essential
     - python-dev
     - python-pip
     - python-mpi4py
     - python3-mpi4py
    tags:
      - easy
      - latest


  - name: Disable Strict Host Key Checking in SSH Config
    lineinfile: >
      dest=/etc/ssh/ssh_config
      line="StrictHostKeyChecking no" 
      insertafter='EOF' 
      state=present
    tags:
      - easy
      - latest

  - name: Install openmpi v1.6.5 ...
    apt: name={{ item }} state=present
    with_items:
      - openmpi-bin
      - openmpi-doc
      - libopenmpi-dev
      - openmpi-checkpoint
      - openmpi-common
    tags:
      - easy

  

   

  - name: Create verification directory ...
    file: path="{{ DEBUG_LOCATION }}" state=directory mode=0755
    tags:
      - always
      - verify
    tags:
      - easy

  - name: Ensure Unzip present
      apt:
        name: unzip
        state: present
    tags:
      - easy

  - name: Extract MPI Tutorial project
      unarchive:
        src: 'https://github.com/mpitutorial/mpitutorial.git'
        dest: "{{ DEBUG_LOCATION }}"
        remote_src: yes
    tags:
      - easy

  - name: Make Hello World project
      make:
        chdir: "{{ mpi_tutorial_repo_dest }}/tutorials/mpi-hello-world/code"
    tags:
      - easy

  - name: Run Hello World program
      shell: "su mpiuser -c 'mpirun --hostfile {{ mpi_hosts_file }} mpi_hello_world'"
      args:
        chdir: "{{ mpi_tutorial_repo_dest }}/tutorials/mpi-hello-world/code"
      register: hello_world_result
    tags:
      - easy

  - name: Output result of Hello World program
      debug:
        msg: "{{ hello_world_result.stdout_lines }}"
    tags:
      - easy

  - name: Processor ran on all slaves
      assert:
        that: "hello_world_result.stdout.find('Hello world from processor {{ item }}') != -1"
        msg: "{{ item }} failed to run the processor. Increase verbosity to more about the error."
      with_items: "{{ groups['slaves'] }}"
    tags:
      - easy

  - name: Clean up after test
      file:
        path: "{{ mpi_tutorial_repo_dest }}"
        state: absent
    tags:
      - easy

